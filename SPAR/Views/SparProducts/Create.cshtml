@model SPAR.Models.SparProducts

@{
    ViewBag.Title = "Create";
}

<h2>New Products</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @*<h4>New Products</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productImage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productImage, "", new { @class = "text-danger" })

            <div>
            <form action="/action_page.php">
                <input type="file" name="pic" accept="image/*">
                <input type="submit" class="btn btn-primary">
            </form>
</div>
    </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productDropPercent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productDropPercent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productDropPercent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productDateEndPromo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productDateEndPromo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productDateEndPromo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
